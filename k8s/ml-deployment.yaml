apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "8"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"ml-microservice","namespace":"ml-microservice"},"spec":{"replicas":2,"selector":{"matchLabels":{"app":"ml-microservice"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":0},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"ml-microservice"}},"spec":{"containers":[{"envFrom":[{"configMapRef":{"name":"ml-microservice-config"}},{"secretRef":{"name":"ml-microservice-secrets"}}],"image":"moisodev/mssml:latest","livenessProbe":{"httpGet":{"path":"/health","port":8001},"initialDelaySeconds":30,"periodSeconds":20,"timeoutSeconds":5},"name":"ml-microservice","ports":[{"containerPort":8001,"name":"http"}],"readinessProbe":{"httpGet":{"path":"/health","port":8001},"initialDelaySeconds":20,"periodSeconds":10,"timeoutSeconds":5},"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"500m","memory":"512Mi"}},"volumeMounts":[{"mountPath":"/app/models","name":"model-storage"}]}],"volumes":[{"name":"model-storage","persistentVolumeClaim":{"claimName":"ml-microservice-exports-pvc"}}]}}}}
  creationTimestamp: "2025-06-09T01:55:26Z"
  generation: 10
  name: ml-microservice
  namespace: ml-microservice
  resourceVersion: "251572"
  uid: 26b56fe6-ab05-4e12-ada2-b0df2afece5d
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: ml-microservice
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/restartedAt: "2025-06-08T22:42:34-04:00"
      creationTimestamp: null
      labels:
        app: ml-microservice
    spec:
      containers:
      - command:
        - sh
        - -c
        - socat TCP-LISTEN:5672,fork,reuseaddr TCP:rabbitmq.rabbitmq-system.svc.cluster.local:5672
        image: alpine/socat
        imagePullPolicy: Always
        name: rabbitmq-proxy
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - envFrom:
        - configMapRef:
            name: ml-microservice-config
        - secretRef:
            name: ml-microservice-secrets
        image: moisodev/mssml:latest
        imagePullPolicy: Always
        name: ml-microservice
        ports:
        - containerPort: 8001
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 512Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /app/models
          name: model-storage
      dnsPolicy: ClusterFirst
      hostAliases:
      - hostnames:
        - 192.168.1.3
        ip: 127.0.0.1
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: model-storage
        persistentVolumeClaim:
          claimName: ml-microservice-exports-pvc
status:
  conditions:
  - lastTransitionTime: "2025-06-09T02:52:34Z"
    lastUpdateTime: "2025-06-09T02:52:34Z"
    message: Deployment does not have minimum availability.
    reason: MinimumReplicasUnavailable
    status: "False"
    type: Available
  - lastTransitionTime: "2025-06-09T02:06:39Z"
    lastUpdateTime: "2025-06-09T02:53:25Z"
    message: ReplicaSet "ml-microservice-56b848948" is progressing.
    reason: ReplicaSetUpdated
    status: "True"
    type: Progressing
  observedGeneration: 10
  replicas: 3
  unavailableReplicas: 3
  updatedReplicas: 1
